name: Develop Merge Check

on:
  pull_request:
    branches:
      - develop

  push:
    branches:
      - feat/8-auth-and-role-control

defaults:
  run:
    working-directory: ./code

jobs:
  laravel-pint:
    name: 🔎 Laravel Pint Code Style Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🧰 Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo, pdo_pgsql
          coverage: none

      - name: 📦 Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: 🧼 Run Laravel Pint (code style test only)
        run: ./vendor/bin/pint --test -v

  test:
    name: 🧪 Run PHPUnit Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: testing
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      DB_CONNECTION: pgsql
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_DATABASE: testing
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      APP_ENV: testing
      APP_KEY: ${{ secrets.APP_KEY }}
      CACHE_DRIVER: array
      SESSION_DRIVER: array
      QUEUE_CONNECTION: sync

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🧰 Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo, pdo_pgsql, xdebug
          coverage: xdebug

      - name: 📦 Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: 🗝️ Generate Application Key
        run: php artisan key:generate

      - name: 🧪 Run PHPUnit tests with coverage
        run: php artisan test --log-junit report.xml --coverage-clover coverage.xml

      - name: Upload test and coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: test-and-coverage-reports
          path: |
            code/report.xml
            code/coverage.xml

  sonarcloud:
    name: 📊 SonarCloud Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⬇️ Download test and coverage reports
        uses: actions/download-artifact@v4
        with:
          name: test-and-coverage-reports
          path: ./code

      - name: 📊 Run SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: ./code
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
